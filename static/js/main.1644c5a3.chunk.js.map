{"version":3,"sources":["components/DisplayComponent.js","components/BtnComponent.js","components/App.js","index.js"],"names":["DisplayComponent","props","time","h","m","s","BtnComponent","status","className","onClick","start","stop","wait","reset","go","App","useState","ms","setTime","intervId","setIntervId","setStatus","updatedMs","updatedS","updatedM","updatedH","updateTime","run","setInterval","useEffect","clearInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAeeA,MAbf,SAA0BC,GACxB,OACE,gCACE,+BAAOA,EAAMC,KAAKC,GAAK,GAAKF,EAAMC,KAAKC,EAAI,IAAMF,EAAMC,KAAKC,IAD9D,YAGE,+BAAOF,EAAMC,KAAKE,GAAK,GAAKH,EAAMC,KAAKE,EAAI,IAAMH,EAAMC,KAAKE,IAH9D,YAKE,+BAAOH,EAAMC,KAAKG,GAAK,GAAKJ,EAAMC,KAAKG,EAAI,IAAMJ,EAAMC,KAAKG,QC8EnDC,MArFf,SAAsBL,GACpB,OACE,gCACoB,IAAjBA,EAAMM,OACL,8BACE,wBACEC,UAAU,kCACVC,QAASR,EAAMS,MAFjB,qBAYF,GAGgB,IAAjBT,EAAMM,OACL,gCACE,wBACEC,UAAU,uDACVC,QAASR,EAAMU,KAFjB,kBAMA,wBACEH,UAAU,kCACVC,QAASR,EAAMW,KAFjB,kBAOA,wBACEJ,UAAU,kCACVC,QAASR,EAAMY,MAFjB,sBAQF,GAcgB,IAAjBZ,EAAMM,OACL,gCACE,wBACEC,UAAU,uDACVC,QAASR,EAAMS,MAFjB,mBAMA,wBACEF,UAAU,kCACVC,QAASR,EAAMa,GAFjB,iBAMA,wBACEN,UAAU,kCACVC,QAASR,EAAMY,MAFjB,sBAQF,OCmBOE,MA/Ff,WAAgB,IAAD,EACWC,mBAAS,CAAEC,GAAI,EAAGZ,EAAG,EAAGD,EAAG,EAAGD,EAAG,IAD5C,mBACND,EADM,KACAgB,EADA,OAEmBF,qBAFnB,mBAENG,EAFM,KAEIC,EAFJ,OAGeJ,mBAAS,GAHxB,mBAGNT,EAHM,KAGEc,EAHF,KAKTC,EAAYpB,EAAKe,GACnBM,EAAWrB,EAAKG,EAChBmB,EAAWtB,EAAKE,EAChBqB,EAAWvB,EAAKC,EAEZuB,EAAa,WAgBjB,OAfiB,KAAbF,IACFC,IACAD,EAAW,GAEI,KAAbD,IACFC,IACAD,EAAW,GAEK,MAAdD,IACFC,IACAD,EAAY,GAGdA,IAEOJ,EAAQ,CAAED,GAAIK,EAAWjB,EAAGkB,EAAUnB,EAAGoB,EAAUrB,EAAGsB,KAGzDE,EAAM,kBAAMP,EAAYQ,YAAYF,EAAY,MAEhDhB,EAAQ,WACZgB,IACAL,EAAU,GACVM,KA6BF,OAJAE,qBAAU,WACK,OAAbV,GAAqBQ,MACpB,CAACR,IAGF,sBAAKX,UAAU,eAAf,UACE,qBAAKA,UAAU,eAAf,SACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAkBN,KAAMA,IACxB,cAAC,EAAD,CACEK,OAAQA,EACRO,GAfC,WACTJ,KAeQE,KArBG,WACXkB,cAAcX,GACdE,EAAU,IAoBFR,MA7BI,WACZQ,EAAU,GACVS,cAAcX,GACdD,EAAQ,CAAED,GAAI,EAAGZ,EAAG,EAAGD,EAAG,EAAGD,EAAG,IAChCiB,EAAY,OA0BJT,KApCG,WACXmB,cAAcX,GACdE,EAAU,GACVH,EAAQ,CAAED,GAAI,EAAGZ,EAAG,EAAGD,EAAG,EAAGD,EAAG,KAkCxBO,MAAOA,SAIb,qBAAIF,UAAU,SAAd,UACE,idAIA,siBAIA,qWCvFRuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.1644c5a3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction DisplayComponent(props) {\r\n  return (\r\n    <div>\r\n      <span>{props.time.h >= 10 ? props.time.h : \"0\" + props.time.h}</span>\r\n      &nbsp;:&nbsp;\r\n      <span>{props.time.m >= 10 ? props.time.m : \"0\" + props.time.m}</span>\r\n      &nbsp;:&nbsp;\r\n      <span>{props.time.s >= 10 ? props.time.s : \"0\" + props.time.s}</span>\r\n      {/* <span>{(props.time.ms >= 10) ? props.time.ms : \"0\" + props.time.ms}</span> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayComponent;","import React from \"react\";\r\n\r\nfunction BtnComponent(props) {\r\n  return (\r\n    <div>\r\n      {props.status === 0 ? (\r\n        <div>\r\n          <button\r\n            className=\"stopwatch-btn stopwatch-btn-gre\"\r\n            onClick={props.start}\r\n          >\r\n            Start\r\n          </button>\r\n          {/* <button className=\"stopwatch-btn stopwatch-btn-gre\"\r\n\t\t\t\t\t\tonClick={props.wait}>Wait</button> */}\r\n          {/* <button className=\"stopwatch-btn stopwatch-btn-yel\"\r\n\t\t\t\t\t\tonClick={props.reset}>Reset</button> */}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {props.status === 1 ? (\r\n        <div>\r\n          <button\r\n            className=\"stopwatch-btn stopwatch-btn-red stopwatch-btn-border\"\r\n            onClick={props.stop}\r\n          >\r\n            Stop\r\n          </button>\r\n          <button\r\n            className=\"stopwatch-btn stopwatch-btn-gre\"\r\n            onClick={props.wait}\r\n          >\r\n            Wait\r\n          </button>\r\n\r\n          <button\r\n            className=\"stopwatch-btn stopwatch-btn-yel\"\r\n            onClick={props.reset}\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {/* {(props.status === 2) ?\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button className=\"stopwatch-btn stopwatch-btn-gre\"\r\n\t\t\t\t\t\tonClick={props.start}>Start</button>\r\n\t\t\t\t\t<button className=\"stopwatch-btn wait stopwatch-btn-gre\"\r\n\t\t\t\t\t\tonClick={props.wait}>Wait</button>\r\n\t\t\t\t\t<button className=\"stopwatch-btn stopwatch-btn-yel\"\r\n\t\t\t\t\t\tonClick={props.reset}>Reset</button>\r\n\t\t\t\t</div> : \"\"\r\n\t\t\t} */}\r\n\r\n      {props.status === 3 ? (\r\n        <div>\r\n          <button\r\n            className=\"stopwatch-btn stopwatch-btn-gre stopwatch-btn-border\"\r\n            onClick={props.start}\r\n          >\r\n            Start\r\n          </button>\r\n          <button\r\n            className=\"stopwatch-btn stopwatch-btn-gre\"\r\n            onClick={props.go}\r\n          >\r\n            GO!\r\n          </button>\r\n          <button\r\n            className=\"stopwatch-btn stopwatch-btn-yel\"\r\n            onClick={props.reset}\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BtnComponent;","import React, { useState, useEffect } from \"react\";\r\nimport DisplayComponent from \"../components/DisplayComponent\";\r\nimport BtnComponent from \"../components/BtnComponent\";\r\nimport \"../index.css\";\r\n\r\nfunction App() {\r\n  const [time, setTime] = useState({ ms: 0, s: 0, m: 0, h: 0 });\r\n  const [intervId, setIntervId] = useState();\r\n  const [status, setStatus] = useState(0);\r\n\r\n  let updatedMs = time.ms,\r\n    updatedS = time.s,\r\n    updatedM = time.m,\r\n    updatedH = time.h;\r\n\r\n  const updateTime = () => {\r\n    if (updatedM === 60) {\r\n      updatedH++;\r\n      updatedM = 0;\r\n    }\r\n    if (updatedS === 60) {\r\n      updatedM++;\r\n      updatedS = 0;\r\n    }\r\n    if (updatedMs === 100) {\r\n      updatedS++;\r\n      updatedMs = 0;\r\n    }\r\n\r\n    updatedMs++;\r\n\r\n    return setTime({ ms: updatedMs, s: updatedS, m: updatedM, h: updatedH });\r\n  };\r\n\r\n  const run = () => setIntervId(setInterval(updateTime, 10));\r\n\r\n  const start = () => {\r\n    updateTime();\r\n    setStatus(1);\r\n    run();\r\n  };\r\n\r\n  const stop = () => {\r\n    clearInterval(intervId);\r\n    setStatus(0);\r\n    setTime({ ms: 0, s: 0, m: 0, h: 0 });\r\n  };\r\n\r\n  const reset = () => {\r\n    setStatus(1);\r\n    clearInterval(intervId);\r\n    setTime({ ms: 0, s: 0, m: 0, h: 0 });\r\n    setIntervId(null);\r\n  };\r\n\r\n  const wait = () => {\r\n    clearInterval(intervId);\r\n    setStatus(3);\r\n  };\r\n\r\n  const go = () => {\r\n    start();\r\n  };\r\n\r\n  useEffect(() => {\r\n    intervId === null && run();\r\n  }, [intervId]);\r\n\r\n  return (\r\n    <div className=\"main-section\">\r\n      <div className=\"clock-holder\">\r\n        <div className=\"stopwatch\">\r\n          <DisplayComponent time={time} />\r\n          <BtnComponent\r\n            status={status}\r\n            go={go}\r\n            wait={wait}\r\n            reset={reset}\r\n            stop={stop}\r\n            start={start}\r\n          />\r\n        </div>\r\n      </div>\r\n      <ul className=\"TZlist\">\r\n        <li>\r\n          «Start / Stop» - запуск / остановка отсчета времени, останавливает и\r\n          обнуляет значение таймера.\r\n        </li>\r\n        <li>\r\n          «Wait» - таймер должен прекратить отсчет времени; если после него\r\n          нажать старт, то возобновляется отсчет.\r\n        </li>\r\n        <li>\r\n          «Reset» - сброс таймера на 0. Обнуляет таймер и снова начинает отсчет.\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}